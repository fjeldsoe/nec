{"version":3,"sources":["Image.js","breakpoints.js","Gallery.js","ImageDetails.js","App.js","serviceWorker.js","index.js"],"names":["Image","styled","img","props","image","className","sizes","key","id","srcSet","downloadUrls","map","obj","Object","entries","url","width","split","srcsetStrings","join","src","values","alt","metadata","name","loading","breakpoints","sm","md","lg","xl","breakpointUp","breakpoint","Wrapper","div","SortableWrapper","SortableContainer","Item","SortableItem","SortableElement","Thumb","UploadIndicator","uploadProgress","FooterBar","hideFooter","EmailButton","button","LoginButton","Gallery","images","handleSortEnd","shouldCancelStart","user","signOut","history","useHistory","useState","setHideFooter","useEffect","prevScrollY","scrollHandler","event","currentScrollY","window","scrollY","document","documentElement","scrollHeight","innerHeight","addEventListener","passive","removeEventListener","axis","pressDelay","onSortEnd","length","index","to","onClick","open","push","GlobalStyles","createGlobalStyle","gradient","Overlay","active","OverlayNav","Back","BackArrow","ArrowBackIcon","Toggle","ImageWrapper","DetailedImage","fade","Description","ButtonBar","Button","DeleteButton","EditorWrappper","SaveButton","removeImage","updateDescription","description","colors","visionData","sort","a","b","score","reduce","acc","curr","color","red","green","blue","getLuminance","outerColor","useContext","AppContext","tinygradient","getContrast","EditorState","createWithContent","convertFromRaw","createEmpty","editorState","setEditorState","unsavedChanges","setUnsavedChanges","isOverlayActive","setIsOverlayActive","css","back","onEditorStateChange","toolbarClassName","wrapperClassName","editorClassName","convertToRaw","getCurrentContent","dangerouslySetInnerHTML","__html","stateToHTML","LoggedInBar","LoginForm","form","FormInput","input","StyledLink","Link","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","galleryCollection","collection","storageRef","storage","ref","createContext","onDragoverHandler","preventDefault","deleteDocRef","doc","delete","App","setImages","setUser","setUploadProgress","email","setEmail","password","setPassword","onDropHandler","dataTransfer","files","Promise","all","resolve","reject","uuidv4","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","then","catch","err","Error","message_","alert","upload","file","type","includes","oldIndex","newIndex","imagesArray","arrayMove","getImagesFromDb","orderBy","get","querySnapshot","imagesFromDBArray","update","confirm","keys","deleteImageRef","path","console","log","error","signIn","auth","signInWithEmailAndPassword","code","errorMessage","message","imagesFromDb","forEach","data","unregisterAuthObserver","onAuthStateChanged","onSnapshot","fromDB","maxSortOrder","Math","max","order","notOrdered","find","batch","val","docRef","parseInt","commit","Provider","value","exact","render","match","params","ImageDetails","onSubmit","placeholder","onChange","target","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b5fe269.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Image = styled.img`\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n`;\n\nexport default (props) => {\n    const { image, className, sizes } = props;\n\n    const srcsetStrings = (image) =>\n        image.downloadUrls.map((obj) => {\n            const [key, url] = Object.entries(obj)[0];\n            const width = key.split('x')[0];\n            return `${url} ${width}w`;\n        });\n\n    return (\n        <Image\n            className={className}\n            key={image.id}\n            srcSet={srcsetStrings(image).join(', ')}\n            src={Object.values(image.downloadUrls[0])[0]}\n            sizes={sizes}\n            alt={image.metadata.name}\n            loading=\"lazy\"\n        />\n    );\n};\n","const breakpoints = {\r\n    // Small devices (landscape phones, 576px and up)\r\n    sm: 576,\r\n    // Medium devices (tablets, 768px and up)\r\n    md: 768,\r\n    // Large devices (desktops, 992px and up)\r\n    lg: 992,\r\n    // Extra large devices (large desktops, 1200px and up)\r\n    xl: 1200\r\n};\r\n\r\nexport function breakpointUp(breakpoint) {\r\n    return `@media (min-width: ${breakpoints[breakpoint]}px)`;\r\n}\r\n\r\nexport default breakpoints;\r\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport Image from './Image';\nimport breakpoints, { breakpointUp } from './breakpoints';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    flex: 1 0 auto;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 5px;\n    margin-bottom: 50px;\n`;\n\nconst SortableWrapper = SortableContainer((props) => <Wrapper {...props} />);\n\nconst Item = styled.div`\n    flex: 0 0 auto;\n    width: calc(50%);\n    padding: 5px;\n    overflow: hidden;\n    height: 250px;\n\n    ${breakpointUp('sm')} {\n        width: calc(33.3%);\n    }\n\n    ${breakpointUp('md')} {\n        width: calc(25%);\n    }\n\n    ${breakpointUp('lg')} {\n        width: calc(20%);\n    }\n`;\n\nconst SortableItem = SortableElement((props) => <Item {...props} />);\n\nconst Thumb = styled(Image)`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 3px;\n    content-visibility: auto;\n`;\n\nconst UploadIndicator = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    opacity: ${(props) => (props.uploadProgress === 0 || props.uploadProgress === 100 ? 0 : 1)};\n    transition: opacity 300ms;\n    pointer-events: none;\n\n    &:after {\n        content: '';\n        display: block;\n        height: inherit;\n        width: ${(props) => props.uploadProgress || 0}%;\n        background: #54a2e6;\n    }\n`;\n\nconst FooterBar = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 50px;\n    padding: 10px;\n    font-size: 12px;\n    background: #333;\n    color: #999;\n\n    transform: translateY(${({ hideFooter }) => (hideFooter ? 100 : 0)}%);\n    transition: transform 300ms ease;\n`;\n\nconst EmailButton = styled.button`\n    background: none;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    color: #999;\n    cursor: pointer;\n`;\n\nconst LoginButton = styled.button`\n    padding: 0;\n    margin: 0;\n    background: none;\n    border: 0;\n    color: #999;\n    cursor: pointer;\n`;\n\nfunction Gallery(props) {\n    const { images, uploadProgress, handleSortEnd, shouldCancelStart, user, signOut } = props;\n    const history = useHistory();\n    const [hideFooter, setHideFooter] = useState(false);\n\n    function handleEmailClick() {\n        const a = 'nechristiansen';\n        const b = 'gmail.com';\n        window.open(`mailto:${a}@${b}`, '_blank');\n    }\n\n    function signIn() {\n        history.push('/nec/login');\n    }\n\n    useEffect(() => {\n        let prevScrollY;\n\n        function scrollHandler(event) {\n            const currentScrollY = window.scrollY;\n\n            if (\n                currentScrollY < 50 ||\n                currentScrollY >= document.documentElement.scrollHeight - window.innerHeight - 50\n            ) {\n                setHideFooter(false);\n                return;\n            }\n\n            setHideFooter(currentScrollY > prevScrollY);\n\n            prevScrollY = window.scrollY;\n        }\n\n        window.addEventListener('scroll', scrollHandler, { passive: true });\n\n        return () => {\n            window.removeEventListener('scroll', scrollHandler);\n        };\n    }, []);\n\n    return (\n        <>\n            <UploadIndicator uploadProgress={uploadProgress} />\n            <SortableWrapper axis=\"xy\" pressDelay={100} onSortEnd={handleSortEnd} shouldCancelStart={shouldCancelStart}>\n                {images.length\n                    ? images.map((image, index) => (\n                          <SortableItem index={index} key={image.id}>\n                              <Link to={`/nec/image/${image.id}`}>\n                                  <Thumb\n                                      image={image}\n                                      sizes={`50vw, (min-width: ${breakpoints.sm}px) 33.3vw, (min-width: ${breakpoints.md}px) 25vw, (min-width: ${breakpoints.lg}px) 20vw`}\n                                  />\n                              </Link>\n                          </SortableItem>\n                      ))\n                    : null}\n            </SortableWrapper>\n            <FooterBar hideFooter={hideFooter}>\n                <span>\n                    <span>&copy; Niels Erik Christiansen</span>\n                    <span> | </span>\n                    <EmailButton onClick={handleEmailClick}>@ Email</EmailButton>\n                    <span> | </span>\n                    <LoginButton onClick={user ? signOut : signIn}>{user ? 'Log ud' : 'Log ind'}</LoginButton>\n                </span>\n            </FooterBar>\n        </>\n    );\n}\n\nexport default Gallery;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components/macro';\r\nimport Image from './Image';\r\nimport { AppContext } from './App';\r\nimport { getLuminance, getContrast } from 'polished';\r\nimport tinygradient from 'tinygradient';\r\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    body {\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            background-image: ${(props) => props.gradient};\r\n            filter: blur(100px);\r\n        }\r\n    }\r\n\r\n    .editorWrapper {\r\n        color: black;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .editorTextField {\r\n        height: auto;\r\n        padding: 10px;\r\n        background: white;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    position: fixed;\r\n    top: 10%;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: linear-gradient(0deg, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0.6) 100%);\r\n    box-shadow: 0 -10px 20px rgba(0, 0, 0, 0.5);\r\n    transform: translateY(${({ active }) => (active ? 0 : 'calc(100% - 60px)')});\r\n    transition: transform 300ms ease;\r\n`;\r\n\r\nconst OverlayNav = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 60px;\r\n`;\r\n\r\nconst Back = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    height: inherit;\r\n    background: none;\r\n    border: 0;\r\n    padding: 0 0 0 20px;\r\n    color: inherit;\r\n    font-size: inherit;\r\n`;\r\n\r\nconst BackArrow = styled(ArrowBackIcon)`\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst Toggle = styled.button`\r\n    margin-right: 30px;\r\n    background: none;\r\n    border: 0;\r\n    padding: 0;\r\n    color: inherit;\r\n    height: inherit;\r\n    font-size: inherit;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    position: relative;\r\n    flex: 1 0 auto;\r\n    padding: 10px;\r\n`;\r\n\r\nconst DetailedImage = styled(Image)`\r\n    flex: none;\r\n    display: block;\r\n    margin: 0 auto;\r\n    filter: drop-shadow(0px 20px 20px rgba(0, 0, 0, 0.5));\r\n    opacity: ${({ fade }) => (fade ? 0.3 : 1)};\r\n    position: absolute;\r\n    width: calc(100% - 20px);\r\n    height: calc(100% - 80px);\r\n    object-fit: contain;\r\n    transition: opacity 300ms ease;\r\n`;\r\n\r\nconst Description = styled.div`\r\n    flex: 1 1 auto;\r\n    min-width: 1px;\r\n    padding: 10px 20px;\r\n    overflow: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n\r\n    @media (min-width: 375px) {\r\n        padding: 10px 60px;\r\n    }\r\n`;\r\n\r\nconst ButtonBar = styled.div`\r\n    position: relative;\r\n    flex: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 60px;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    flex: 1 1 50%;\r\n    font-weight: bold;\r\n    border: 0;\r\n    max-width: 300px;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst DeleteButton = styled(Button)`\r\n    color: #fff;\r\n    background: linear-gradient(0deg, rgba(162, 0, 0, 1) 0%, rgba(218, 0, 0, 1) 100%);\r\n`;\r\n\r\nconst EditorWrappper = styled.div`\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n    background: orange;\r\n    border: none;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default (props) => {\r\n    const { history, image, removeImage, updateDescription } = props;\r\n    const { description } = image;\r\n    const { colors } = image.metadata.visionData;\r\n    const [primaryColor, secondaryColor] = colors\r\n        .sort((a, b) => b.score - a.score)\r\n        .reduce((acc, curr, index) => {\r\n            const {\r\n                color: { red, green, blue },\r\n            } = curr;\r\n            return index < 2 ? [...acc, `rgb(${red}, ${green}, ${blue})`] : acc;\r\n        }, []);\r\n\r\n    const [innerColor, outerColor] = [primaryColor, secondaryColor].sort((a, b) => getLuminance(b) - getLuminance(a));\r\n    const { user } = useContext(AppContext);\r\n    const gradient = tinygradient(colors.map(({ color: { red, green, blue } }) => `rgb(${red},${green},${blue})`));\r\n    const [fontColor] = ['#000', '#FFF'].sort((a, b) => getContrast(outerColor, b) - getContrast(outerColor, a));\r\n    const [editorState, setEditorState] = useState(\r\n        description ? EditorState.createWithContent(convertFromRaw(description)) : EditorState.createEmpty()\r\n    );\r\n    const [unsavedChanges, setUnsavedChanges] = useState(false);\r\n    const [isOverlayActive, setIsOverlayActive] = useState(false);\r\n\r\n    function saveDescription() {\r\n        const { id } = image;\r\n        const description = convertToRaw(editorState.getCurrentContent());\r\n        updateDescription({ id, description });\r\n        setUnsavedChanges(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUnsavedChanges(true);\r\n    }, [editorState]);\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles gradient={gradient.css('radial')} />\r\n            <Wrapper>\r\n                <ImageWrapper onClick={() => setIsOverlayActive(false)}>\r\n                    <DetailedImage image={{ ...image }} fade={isOverlayActive} />\r\n                </ImageWrapper>\r\n                <Overlay active={isOverlayActive}>\r\n                    <OverlayNav>\r\n                        <Back onClick={() => window.history.back()}>\r\n                            <BackArrow /> Tilbage\r\n                        </Back>\r\n                        <Toggle onClick={() => setIsOverlayActive(!isOverlayActive)}>\r\n                            {isOverlayActive ? 'Skjul' : 'Vis'} beskrivelse\r\n                        </Toggle>\r\n                    </OverlayNav>\r\n                    <Description>\r\n                        {user && (\r\n                            <EditorWrappper>\r\n                                <Editor\r\n                                    editorState={editorState}\r\n                                    onEditorStateChange={setEditorState}\r\n                                    toolbarClassName=\"editorToolbar\"\r\n                                    wrapperClassName=\"editorWrapper\"\r\n                                    editorClassName=\"editorTextField\"\r\n                                />\r\n                                {unsavedChanges && <SaveButton onClick={saveDescription}>Gem beskrivelse</SaveButton>}\r\n                            </EditorWrappper>\r\n                        )}\r\n                        {!user && description && (\r\n                            <div dangerouslySetInnerHTML={{ __html: stateToHTML(convertFromRaw(description)) }}></div>\r\n                        )}\r\n                        <ButtonBar>\r\n                            {user && <DeleteButton onClick={() => removeImage(image)}>Slet billede</DeleteButton>}\r\n                        </ButtonBar>\r\n                    </Description>\r\n                </Overlay>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport styled from 'styled-components/macro';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport Gallery from './Gallery';\nimport ImageDetails from './ImageDetails';\nimport arrayMove from 'array-move';\n\nconst LoggedInBar = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background: #333;\n`;\n\nconst LoginForm = styled.form`\n    width: 100%;\n    max-width: 500px;\n    padding: 20px;\n    margin: 0 auto;\n`;\n\nconst FormInput = styled.input`\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #999;\n    background: #fff;\n`;\n\nconst LoginButton = styled.button`\n    width: 100%;\n    height: 40px;\n`;\n\nconst StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    margin-top: 20px;\n    color: #fff;\n`;\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyBPG6_rLNCqJKQaQxRxoL9kiNRrst_SGng',\n    authDomain: 'necgallery-9b4b2.firebaseapp.com',\n    databaseURL: 'https://necgallery-9b4b2.firebaseio.com',\n    projectId: 'necgallery-9b4b2',\n    storageBucket: 'necgallery-9b4b2.appspot.com',\n    messagingSenderId: '534201773677',\n    appId: '1:534201773677:web:57fa8d6f25817e60155964',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst galleryCollection = db.collection('gallery');\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport const AppContext = createContext();\n\nfunction upload(images, setUploadProgress) {\n    return Promise.all(\n        images.map((image) => {\n            return new Promise((resolve, reject) => {\n                const id = uuidv4();\n\n                const imageRef = storageRef.child(`gallery/${id}/original.jpg`);\n                const uploadTask = imageRef.put(image);\n                uploadTask.on('state_changed', function uploadProgress(snapshot) {\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    setUploadProgress(progress);\n                });\n                uploadTask\n                    .then((snapshot) => {\n                        resolve({ ...snapshot, id });\n                    })\n                    .catch((err) => {\n                        reject(new Error(err.message_));\n                    });\n            });\n        })\n    ).catch((err) => {\n        alert(err);\n    });\n}\n\nfunction onDragoverHandler(event) {\n    event.preventDefault();\n}\n\nfunction deleteDocRef(id) {\n    return galleryCollection.doc(id).delete();\n}\n\nfunction deleteImageRef(path) {\n    return storageRef.child(path).delete();\n}\n\nfunction App() {\n    const [images, setImages] = useState([]);\n    const [user, setUser] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function onDropHandler(event) {\n        event.preventDefault();\n\n        const {\n            dataTransfer: { files = {} },\n        } = event;\n\n        const images = Object.values(files).reduce((acc, file) => {\n            return file.type.includes('image') ? [...acc, file] : acc;\n        }, []);\n\n        upload(images, setUploadProgress);\n    }\n\n    function shouldCancelStart() {\n        return user !== false ? false : true;\n    }\n\n    function handleSortEnd({ oldIndex, newIndex }) {\n        setImages((imagesArray) => arrayMove(imagesArray, oldIndex, newIndex));\n    }\n\n    function getImagesFromDb() {\n        galleryCollection\n            .orderBy('order')\n            .get()\n            .then((querySnapshot) => {\n                setImages(imagesFromDBArray(querySnapshot));\n            });\n    }\n\n    function updateDescription({ id, description }) {\n        galleryCollection.doc(id).update({ description });\n        getImagesFromDb();\n    }\n\n    function removeImage(image) {\n        const sure = window.confirm('Er du sikker på du vil slette billedet?');\n\n        if (!sure) {\n            return;\n        }\n\n        const { id, downloadUrls } = image;\n        const keys = downloadUrls.map((obj) => {\n            const [key] = Object.keys(obj);\n            return key;\n        });\n        Promise.all([keys.map((key) => deleteImageRef(`gallery/${id}/${key}.jpg`)), deleteDocRef(id)])\n            .then(function () {\n                // File deleted successfully\n                console.log('successfully deleted images');\n                getImagesFromDb();\n            })\n            .catch(function (error) {\n                // Uh-oh, an error occurred!\n                console.log(error);\n            });\n    }\n\n    function signIn(event) {\n        event.preventDefault();\n\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(function (error) {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n\n                alert(errorMessage);\n            });\n    }\n\n    async function signOut() {\n        await firebase.auth().signOut();\n        setUser(false);\n    }\n\n    // Check login status\n    useEffect(() => {\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setUser(user);\n            }\n        });\n\n        return () => {\n            unregisterAuthObserver();\n        };\n    }, []);\n\n    function imagesFromDBArray(querySnapshot) {\n        const imagesFromDb = [];\n\n        querySnapshot.forEach((doc) => {\n            const id = doc.id;\n            const data = doc.data();\n            imagesFromDb.push({ id, ...data });\n        });\n\n        return imagesFromDb;\n    }\n\n    useEffect(() => {\n        getImagesFromDb();\n\n        galleryCollection.onSnapshot((querySnapshot) => {\n            const fromDB = imagesFromDBArray(querySnapshot);\n\n            const maxSortOrder = Math.max(...fromDB.map(({ order }) => order));\n            const notOrdered = fromDB.find(({ order }) => order === -1);\n\n            if (notOrdered) {\n                setImages((imagesArray) => [...imagesArray, { ...notOrdered, order: maxSortOrder + 1 }]);\n            }\n        });\n\n        document.addEventListener('drop', onDropHandler);\n        document.addEventListener('dragover', onDragoverHandler);\n\n        return () => {\n            document.removeEventListener('drop', onDropHandler);\n            document.removeEventListener('dragover', onDragoverHandler);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            const batch = db.batch();\n            Object.entries(images).forEach(([key, val]) => {\n                const { id } = val;\n                const docRef = galleryCollection.doc(id);\n                batch.update(docRef, { order: parseInt(key) });\n            });\n            batch.commit().then(() => {\n                console.log('committed batch');\n            });\n        }\n    }, [user, images]);\n\n    return (\n        <AppContext.Provider value={{ user }}>\n            {user && (\n                <LoggedInBar>\n                    <span>Du er logget ind</span>\n                </LoggedInBar>\n            )}\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/nec\"\n                        render={(props) => (\n                            <Gallery\n                                {...props}\n                                images={images}\n                                user={user}\n                                signOut={signOut}\n                                uploadProgress={uploadProgress}\n                                handleSortEnd={handleSortEnd}\n                                shouldCancelStart={shouldCancelStart}\n                            ></Gallery>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/nec/image/:id\"\n                        render={(props) => {\n                            if (images.length) {\n                                const id = props.match.params.id;\n                                const image = images.find((image) => image.id === id);\n                                return image ? (\n                                    <ImageDetails\n                                        {...props}\n                                        image={image}\n                                        removeImage={removeImage}\n                                        updateDescription={updateDescription}\n                                        user={user}\n                                    />\n                                ) : (\n                                    <Redirect to=\"/nec\" />\n                                );\n                            }\n                        }}\n                    />\n                    <Route\n                        exact\n                        path=\"/nec/login\"\n                        render={() =>\n                            user === false ? (\n                                <LoginForm onSubmit={signIn}>\n                                    <FormInput\n                                        type=\"text\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={(event) => setEmail(event.target.value)}\n                                    />\n                                    <FormInput\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={(event) => setPassword(event.target.value)}\n                                    />\n                                    <LoginButton>Log ind</LoginButton>\n                                    <StyledLink to=\"/nec\">Tilbage</StyledLink>\n                                </LoginForm>\n                            ) : (\n                                <Redirect to=\"/nec\" />\n                            )\n                        }\n                    />\n                    <Redirect to=\"/nec\" />\n                </Switch>\n            </Router>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}