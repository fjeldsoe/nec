{"version":3,"sources":["Image.js","breakpoints.js","Gallery.js","ImageDetails.js","App.js","serviceWorker.js","index.js"],"names":["Image","styled","img","props","image","className","sizes","key","id","srcSet","downloadUrls","map","obj","Object","entries","url","width","split","srcsetStrings","join","src","values","alt","metadata","name","loading","breakpoints","sm","md","lg","xl","breakpointUp","breakpoint","Wrapper","div","SortableWrapper","SortableContainer","Item","SortableItem","SortableElement","Thumb","UploadIndicator","uploadProgress","FooterBar","EmailButton","button","LoginButton","Gallery","images","handleSortEnd","shouldCancelStart","user","signOut","history","useHistory","axis","pressDelay","onSortEnd","length","index","data-order","order","to","onClick","window","open","push","GlobalStyles","createGlobalStyle","gradient","Background","ImageWrapper","DetailedImage","Description","ButtonBar","Button","BackButton","backgroundColor","fontColor","DeleteButton","EditorWrappper","SaveButton","removeImage","updateDescription","description","colors","visionData","sort","a","b","score","reduce","acc","curr","color","red","green","blue","getLuminance","outerColor","useContext","AppContext","tinygradient","getContrast","useState","EditorState","createWithContent","convertFromRaw","createEmpty","editorState","setEditorState","unsavedChanges","setUnsavedChanges","useEffect","css","onEditorStateChange","toolbarClassName","wrapperClassName","editorClassName","convertToRaw","getCurrentContent","dangerouslySetInnerHTML","__html","stateToHTML","LoggedInBar","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","galleryCollection","collection","storageRef","storage","ref","createContext","onDragoverHandler","event","preventDefault","deleteDocRef","doc","delete","App","setImages","setUser","setUploadProgress","onDropHandler","dataTransfer","files","Promise","all","resolve","reject","uuidv4","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","then","catch","err","Error","message_","alert","upload","file","type","includes","oldIndex","newIndex","imagesArray","arrayMove","getImagesFromDb","orderBy","get","querySnapshot","imagesFromDBArray","update","confirm","keys","deleteImageRef","path","console","log","error","auth","imagesFromDb","forEach","data","unregisterAuthObserver","onAuthStateChanged","onSnapshot","fromDB","maxSortOrder","Math","max","notOrdered","find","document","addEventListener","removeEventListener","batch","val","docRef","parseInt","commit","Provider","value","displayName","exact","render","match","params","ImageDetails","uiConfig","signInFlow","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","firebaseAuth","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.740eda11.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n`;\n\nexport default props => {\n    const { image, className, sizes } = props;\n\n    const srcsetStrings = image =>\n        image.downloadUrls.map(obj => {\n            const [key, url] = Object.entries(obj)[0];\n            const width = key.split('x')[0];\n            return `${url} ${width}w`;\n        });\n\n    return (\n        <Image\n            className={className}\n            key={image.id}\n            srcSet={srcsetStrings(image).join(', ')}\n            src={Object.values(image.downloadUrls[0])[0]}\n            sizes={sizes}\n            alt={image.metadata.name}\n            loading=\"lazy\"\n        />\n    );\n};\n","const breakpoints = {\r\n    // Small devices (landscape phones, 576px and up)\r\n    sm: 576,\r\n    // Medium devices (tablets, 768px and up)\r\n    md: 768,\r\n    // Large devices (desktops, 992px and up)\r\n    lg: 992,\r\n    // Extra large devices (large desktops, 1200px and up)\r\n    xl: 1200\r\n};\r\n\r\nexport function breakpointUp(breakpoint) {\r\n    return `@media (min-width: ${breakpoints[breakpoint]}px)`;\r\n}\r\n\r\nexport default breakpoints;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Image from './Image';\nimport breakpoints, { breakpointUp } from './breakpoints';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    padding: 5px;\n`;\n\nconst SortableWrapper = SortableContainer((props) => <Wrapper {...props} />);\n\nconst Item = styled.div`\n    flex: 0 0 auto;\n    width: calc(50%);\n    max-height: 300px;\n    padding: 5px;\n    overflow: hidden;\n\n    ${breakpointUp('sm')} {\n        width: calc(33.3%);\n    }\n\n    ${breakpointUp('md')} {\n        width: calc(25%);\n    }\n\n    ${breakpointUp('lg')} {\n        width: calc(20%);\n    }\n`;\n\nconst SortableItem = SortableElement((props) => <Item {...props} />);\n\nconst Thumb = styled(Image)`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 3px;\n`;\n\nconst UploadIndicator = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    opacity: ${(props) => (props.uploadProgress === 0 || props.uploadProgress === 100 ? 0 : 1)};\n    transition: opacity 300ms;\n    pointer-events: none;\n\n    &:after {\n        content: '';\n        display: block;\n        height: inherit;\n        width: ${(props) => props.uploadProgress || 0}%;\n        background: #54a2e6;\n    }\n`;\n\nconst FooterBar = styled.div`\n    margin: auto 10px 10px;\n    border-radius: 5px;\n    padding: 10px;\n    font-size: 12px;\n    background: #333;\n    color: #999;\n`;\n\nconst EmailButton = styled.button`\n    background: none;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    color: #999;\n    cursor: pointer;\n`;\n\nconst LoginButton = styled.button`\n    padding: 0;\n    margin: 0;\n    background: none;\n    border: 0;\n    color: #999;\n    cursor: pointer;\n`;\n\nfunction Gallery(props) {\n    const { images, uploadProgress, handleSortEnd, shouldCancelStart, user, signOut } = props;\n    const history = useHistory();\n\n    function handleEmailClick() {\n        window.open('mailto:nechristiansen@gmail.com', '_blank');\n    }\n\n    function signIn() {\n        history.push('/nec/login');\n    }\n\n    return (\n        <>\n            <UploadIndicator uploadProgress={uploadProgress} />\n            <SortableWrapper axis=\"xy\" pressDelay={500} onSortEnd={handleSortEnd} shouldCancelStart={shouldCancelStart}>\n                {images.length\n                    ? images.map((image, index) => (\n                          <SortableItem index={index} key={image.id} data-order={image.order}>\n                              <Link to={`/nec/image/${image.id}`}>\n                                  <Thumb\n                                      image={image}\n                                      sizes={`50vw, (min-width: ${breakpoints.sm}px) 33.3vw, (min-width: ${breakpoints.md}px) 25vw, (min-width: ${breakpoints.lg}px) 20vw`}\n                                  />\n                              </Link>\n                          </SortableItem>\n                      ))\n                    : null}\n            </SortableWrapper>\n            <FooterBar>\n                <span>&copy; Niels Erik Christiansen</span>\n                <span> | </span>\n                <EmailButton onClick={handleEmailClick}>@ Email</EmailButton>\n                <span> | </span>\n                <LoginButton onClick={user ? signOut : signIn}>{user ? 'Log ud' : 'Log ind'}</LoginButton>\n            </FooterBar>\n        </>\n    );\n}\n\nexport default Gallery;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport Image from './Image';\r\nimport { AppContext } from './App';\r\nimport { getLuminance, getContrast } from 'polished';\r\nimport tinygradient from 'tinygradient';\r\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    body {\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            background-image: ${(props) => props.gradient};\r\n            filter: blur(100px);\r\n        }\r\n    }\r\n\r\n    .editorWrapper {\r\n        color: black;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .editorTextField {\r\n        height: auto;\r\n        padding: 10px;\r\n        background: white;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 90%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    position: relative;\r\n    flex: 1 0 auto;\r\n    padding: 10px;\r\n`;\r\n\r\nconst DetailedImage = styled(Image)`\r\n    flex: none;\r\n    display: block;\r\n    max-height: calc(100vh - 20px);\r\n    margin: 0 auto;\r\n    filter: drop-shadow(0px 20px 20px rgba(0, 0, 0, 0.5));\r\n`;\r\n\r\nconst Description = styled.div`\r\n    flex: 1 1 auto;\r\n    min-width: 1px;\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst ButtonBar = styled.div`\r\n    position: relative;\r\n    flex: none;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 60px;\r\n    margin: 20px 0;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    flex: 1 1 50%;\r\n    font-weight: bold;\r\n    border: 0;\r\n`;\r\n\r\nconst BackButton = styled(Button)`\r\n    background: ${({ backgroundColor }) => backgroundColor};\r\n    color: ${({ fontColor }) => fontColor};\r\n`;\r\n\r\nconst DeleteButton = styled(Button)`\r\n    color: #fff;\r\n    background: linear-gradient(0deg, rgba(162, 0, 0, 1) 0%, rgba(218, 0, 0, 1) 100%);\r\n`;\r\n\r\nconst EditorWrappper = styled.div`\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n    background: orange;\r\n    border: none;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default (props) => {\r\n    const { history, image, removeImage, updateDescription } = props;\r\n    const { description } = image;\r\n    const { colors } = image.metadata.visionData;\r\n    const [primaryColor, secondaryColor] = colors\r\n        .sort((a, b) => b.score - a.score)\r\n        .reduce((acc, curr, index) => {\r\n            const {\r\n                color: { red, green, blue },\r\n            } = curr;\r\n            return index < 2 ? [...acc, `rgb(${red}, ${green}, ${blue})`] : acc;\r\n        }, []);\r\n\r\n    const [innerColor, outerColor] = [primaryColor, secondaryColor].sort((a, b) => getLuminance(b) - getLuminance(a));\r\n    const { user } = useContext(AppContext);\r\n    const gradient = tinygradient(colors.map(({ color: { red, green, blue } }) => `rgb(${red},${green},${blue})`));\r\n    const [fontColor] = ['#000', '#FFF'].sort((a, b) => getContrast(outerColor, b) - getContrast(outerColor, a));\r\n    const [editorState, setEditorState] = useState(\r\n        description ? EditorState.createWithContent(convertFromRaw(description)) : EditorState.createEmpty()\r\n    );\r\n    const [unsavedChanges, setUnsavedChanges] = useState(false);\r\n\r\n    function saveDescription() {\r\n        const { id } = image;\r\n        const description = convertToRaw(editorState.getCurrentContent());\r\n        updateDescription({ id, description });\r\n        setUnsavedChanges(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUnsavedChanges(true);\r\n    }, [editorState]);\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles gradient={gradient.css('radial')} />\r\n            <Wrapper>\r\n                <Background>\r\n                    <ImageWrapper>\r\n                        <DetailedImage image={{ ...image }} sizes=\"90vw\" />\r\n                    </ImageWrapper>\r\n                    <Description>\r\n                        {user && (\r\n                            <EditorWrappper>\r\n                                <Editor\r\n                                    editorState={editorState}\r\n                                    onEditorStateChange={setEditorState}\r\n                                    toolbarClassName=\"editorToolbar\"\r\n                                    wrapperClassName=\"editorWrapper\"\r\n                                    editorClassName=\"editorTextField\"\r\n                                />\r\n                                {unsavedChanges && <SaveButton onClick={saveDescription}>Gem beskrivelse</SaveButton>}\r\n                            </EditorWrappper>\r\n                        )}\r\n                        {!user && description && (\r\n                            <div dangerouslySetInnerHTML={{ __html: stateToHTML(convertFromRaw(description)) }}></div>\r\n                        )}\r\n                    </Description>\r\n                </Background>\r\n                <ButtonBar>\r\n                    <BackButton backgroundColor={outerColor} fontColor={fontColor} onClick={() => history.push('/nec')}>\r\n                        Tilbage\r\n                    </BackButton>\r\n                    {user && <DeleteButton onClick={() => removeImage(image)}>Slet billede</DeleteButton>}\r\n                </ButtonBar>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/firestore';\nimport Gallery from './Gallery';\nimport ImageDetails from './ImageDetails';\nimport arrayMove from 'array-move';\n\nconst LoggedInBar = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background: #333;\n`;\n\nconst config = {\n    apiKey: 'AIzaSyBPG6_rLNCqJKQaQxRxoL9kiNRrst_SGng',\n    authDomain: 'necgallery-9b4b2.firebaseapp.com',\n    databaseURL: 'https://necgallery-9b4b2.firebaseio.com',\n    projectId: 'necgallery-9b4b2',\n    storageBucket: 'necgallery-9b4b2.appspot.com',\n    messagingSenderId: '534201773677',\n};\n\nfirebase.initializeApp(config);\n\nconst db = firebase.firestore();\nconst galleryCollection = db.collection('gallery');\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nexport const AppContext = createContext();\n\nfunction upload(images, setUploadProgress) {\n    return Promise.all(\n        images.map((image) => {\n            return new Promise((resolve, reject) => {\n                const id = uuidv4();\n\n                const imageRef = storageRef.child(`gallery/${id}/original.jpg`);\n                const uploadTask = imageRef.put(image);\n                uploadTask.on('state_changed', function uploadProgress(snapshot) {\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    setUploadProgress(progress);\n                });\n                uploadTask\n                    .then((snapshot) => {\n                        resolve({ ...snapshot, id });\n                    })\n                    .catch((err) => {\n                        reject(new Error(err.message_));\n                    });\n            });\n        })\n    ).catch((err) => {\n        alert(err);\n    });\n}\n\nfunction onDragoverHandler(event) {\n    event.preventDefault();\n}\n\nfunction deleteDocRef(id) {\n    return galleryCollection.doc(id).delete();\n}\n\nfunction deleteImageRef(path) {\n    return storageRef.child(path).delete();\n}\n\nfunction App() {\n    const [images, setImages] = useState([]);\n    const [user, setUser] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n\n    function onDropHandler(event) {\n        event.preventDefault();\n\n        const {\n            dataTransfer: { files = {} },\n        } = event;\n\n        const images = Object.values(files).reduce((acc, file) => {\n            return file.type.includes('image') ? [...acc, file] : acc;\n        }, []);\n\n        upload(images, setUploadProgress);\n    }\n\n    function shouldCancelStart() {\n        return user !== false ? false : true;\n    }\n\n    function handleSortEnd({ oldIndex, newIndex }) {\n        setImages((imagesArray) => arrayMove(imagesArray, oldIndex, newIndex));\n    }\n\n    function getImagesFromDb() {\n        galleryCollection\n            .orderBy('order')\n            .get()\n            .then((querySnapshot) => {\n                setImages(imagesFromDBArray(querySnapshot));\n            });\n    }\n\n    function updateDescription({ id, description }) {\n        galleryCollection.doc(id).update({ description });\n        getImagesFromDb();\n    }\n\n    function removeImage(image) {\n        const sure = window.confirm('Er du sikker på du vil slette billedet?');\n\n        if (!sure) {\n            return;\n        }\n\n        const { id, downloadUrls } = image;\n        const keys = downloadUrls.map((obj) => {\n            const [key] = Object.keys(obj);\n            return key;\n        });\n        Promise.all([keys.map((key) => deleteImageRef(`gallery/${id}/${key}.jpg`)), deleteDocRef(id)])\n            .then(function () {\n                // File deleted successfully\n                console.log('successfully deleted images');\n                getImagesFromDb();\n            })\n            .catch(function (error) {\n                // Uh-oh, an error occurred!\n                console.log(error);\n            });\n    }\n\n    async function signOut() {\n        await firebase.auth().signOut();\n        setUser(false);\n    }\n\n    // Check login status\n    useEffect(() => {\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setUser(user);\n            }\n        });\n\n        return () => {\n            unregisterAuthObserver();\n        };\n    }, []);\n\n    function imagesFromDBArray(querySnapshot) {\n        const imagesFromDb = [];\n\n        querySnapshot.forEach((doc) => {\n            const id = doc.id;\n            const data = doc.data();\n            imagesFromDb.push({ id, ...data });\n        });\n\n        return imagesFromDb;\n    }\n\n    useEffect(() => {\n        getImagesFromDb();\n\n        galleryCollection.onSnapshot((querySnapshot) => {\n            const fromDB = imagesFromDBArray(querySnapshot);\n\n            const maxSortOrder = Math.max(...fromDB.map(({ order }) => order));\n            const notOrdered = fromDB.find(({ order }) => order === -1);\n\n            if (notOrdered) {\n                setImages((imagesArray) => [...imagesArray, { ...notOrdered, order: maxSortOrder + 1 }]);\n            }\n        });\n\n        document.addEventListener('drop', onDropHandler);\n        document.addEventListener('dragover', onDragoverHandler);\n\n        return () => {\n            document.removeEventListener('drop', onDropHandler);\n            document.removeEventListener('dragover', onDragoverHandler);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            const batch = db.batch();\n            Object.entries(images).forEach(([key, val]) => {\n                const { id } = val;\n                const docRef = galleryCollection.doc(id);\n                batch.update(docRef, { order: parseInt(key) });\n            });\n            batch.commit().then(() => {\n                console.log('committed batch');\n            });\n        }\n    }, [user, images]);\n\n    return (\n        <AppContext.Provider value={{ user }}>\n            {user && (\n                <LoggedInBar>\n                    <span>Hej {user.displayName}</span>\n                </LoggedInBar>\n            )}\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/nec\"\n                        render={(props) => (\n                            <Gallery\n                                {...props}\n                                images={images}\n                                user={user}\n                                signOut={signOut}\n                                uploadProgress={uploadProgress}\n                                handleSortEnd={handleSortEnd}\n                                shouldCancelStart={shouldCancelStart}\n                            ></Gallery>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/nec/image/:id\"\n                        render={(props) => {\n                            if (images.length) {\n                                const id = props.match.params.id;\n                                const image = images.find((image) => image.id === id);\n                                return image ? (\n                                    <ImageDetails\n                                        {...props}\n                                        image={image}\n                                        removeImage={removeImage}\n                                        updateDescription={updateDescription}\n                                        user={user}\n                                    />\n                                ) : (\n                                    <Redirect to=\"/nec\" />\n                                );\n                            }\n                        }}\n                    />\n                    <Route\n                        exact\n                        path=\"/nec/login\"\n                        render={() =>\n                            user === false ? (\n                                <StyledFirebaseAuth\n                                    uiConfig={{\n                                        signInFlow: 'popup',\n                                        signInSuccessUrl: '/nec',\n                                        signInOptions: [firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n                                    }}\n                                    firebaseAuth={firebase.auth()}\n                                />\n                            ) : (\n                                <Redirect to=\"/nec\" />\n                            )\n                        }\n                    />\n                    <Redirect to=\"/nec\" />\n                </Switch>\n            </Router>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}