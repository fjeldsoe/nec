{"version":3,"sources":["Image.js","breakpoints.js","Gallery.js","ImageDetails.js","App.js","serviceWorker.js","index.js"],"names":["Image","styled","img","props","image","className","sizes","key","id","srcSet","downloadUrls","map","obj","Object","entries","url","width","split","srcsetStrings","join","src","values","alt","metadata","name","loading","breakpoints","sm","md","lg","xl","breakpointUp","breakpoint","Wrapper","div","ImageLink","Link","Thumb","UploadIndicator","uploadProgress","App","images","length","to","gradient","ImageWrapper","DetailedImage","ButtonBar","Button","button","BackButton","backgroundColor","fontColor","DeleteButton","history","removeImage","visionData","colors","sort","a","b","score","reduce","acc","curr","index","color","red","green","blue","getLuminance","innerColor","outerColor","user","useContext","AppContext","getContrast","onClick","push","LoggedInBar","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","galleryCollection","firestore","collection","storageRef","storage","ref","createContext","onDragoverHandler","event","preventDefault","deleteDocRef","doc","delete","useState","setImages","setUser","setUploadProgress","onDropHandler","console","log","dataTransfer","files","Promise","all","resolve","reject","uuidv4","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","then","catch","err","Error","message_","alert","upload","file","type","includes","window","confirm","keys","deleteImageRef","path","error","auth","signOut","useEffect","unregisterAuthObserver","onAuthStateChanged","onSnapshot","querySnapshot","imagesFromDb","forEach","data","document","addEventListener","Provider","value","displayName","exact","render","Gallery","match","params","find","ImageDetails","uiConfig","signInFlow","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","firebaseAuth","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ac9ce08.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n`;\n\nexport default props => {\n    const { image, className, sizes } = props;\n\n    const srcsetStrings = image =>\n        image.downloadUrls.map(obj => {\n            const [key, url] = Object.entries(obj)[0];\n            const width = key.split('x')[0];\n            return `${url} ${width}w`;\n        });\n\n    return (\n        <Image\n            className={className}\n            key={image.id}\n            srcSet={srcsetStrings(image).join(', ')}\n            src={Object.values(image.downloadUrls[0])[0]}\n            sizes={sizes}\n            alt={image.metadata.name}\n            loading=\"lazy\"\n        />\n    );\n};\n","const breakpoints = {\r\n    // Small devices (landscape phones, 576px and up)\r\n    sm: 576,\r\n    // Medium devices (tablets, 768px and up)\r\n    md: 768,\r\n    // Large devices (desktops, 992px and up)\r\n    lg: 992,\r\n    // Extra large devices (large desktops, 1200px and up)\r\n    xl: 1200\r\n};\r\n\r\nexport function breakpointUp(breakpoint) {\r\n    return `@media (min-width: ${breakpoints[breakpoint]}px)`;\r\n}\r\n\r\nexport default breakpoints;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Image from './Image';\nimport breakpoints, { breakpointUp } from './breakpoints';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    padding: 5px;\n`;\n\nconst ImageLink = styled(Link)`\n    flex: 0 0 auto;\n    width: calc(50%);\n    max-height: 300px;\n    padding: 5px;\n    overflow: hidden;\n\n    ${breakpointUp('sm')} {\n        width: calc(33.3%);\n    }\n\n    ${breakpointUp('md')} {\n        width: calc(25%);\n    }\n\n    ${breakpointUp('lg')} {\n        width: calc(20%);\n    }\n`;\n\nconst Thumb = styled(Image)`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 3px;\n`;\n\nconst UploadIndicator = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    opacity: ${(props) => (props.uploadProgress === 0 || props.uploadProgress === 100 ? 0 : 1)};\n    transition: opacity 300ms;\n    pointer-events: none;\n\n    &:after {\n        content: '';\n        display: block;\n        height: inherit;\n        width: ${(props) => props.uploadProgress || 0}%;\n        background: #54a2e6;\n    }\n`;\n\nfunction App(props) {\n    const { images, uploadProgress } = props;\n\n    return (\n        <>\n            <UploadIndicator uploadProgress={uploadProgress} />\n            <Wrapper>\n                {images.length\n                    ? images.map((image) => (\n                          <ImageLink to={`/image/${image.id}`} key={image.id}>\n                              <Thumb\n                                  key={image.id}\n                                  image={image}\n                                  sizes={`50vw, (min-width: ${breakpoints.sm}px) 33.3vw, (min-width: ${breakpoints.md}px) 25vw, (min-width: ${breakpoints.lg}px) 20vw`}\n                              />\n                          </ImageLink>\n                      ))\n                    : null}\n            </Wrapper>\n        </>\n    );\n}\n\nexport default App;\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Image from './Image';\r\nimport { AppContext } from './App';\r\nimport { getLuminance, getContrast } from 'polished';\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: ${(props) => props.gradient};\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst DetailedImage = styled(Image)`\r\n    max-width: 90%;\r\n    max-height: 90%;\r\n    object-fit: contain;\r\n    filter: drop-shadow(0px 20px 20px rgba(0, 0, 0, 0.5));\r\n`;\r\n\r\nconst ButtonBar = styled.div`\r\n    display: flex;\r\n    height: 60px;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    flex: 1 1 50%;\r\n    font-weight: bold;\r\n    border: 0;\r\n`;\r\n\r\nconst BackButton = styled(Button)`\r\n    background: ${({ backgroundColor }) => backgroundColor};\r\n    color: ${({ fontColor }) => fontColor};\r\n`;\r\n\r\nconst DeleteButton = styled(Button)`\r\n    color: #fff;\r\n    background: linear-gradient(0deg, rgba(162, 0, 0, 1) 0%, rgba(218, 0, 0, 1) 100%);\r\n`;\r\n\r\n// const ColorBlock = styled.span`\r\n//     display: inline-block;\r\n//     width: 30px;\r\n//     height: 30px;\r\n//     background-color: ${({ color }) => `rgb(${color.red},${color.green},${color.blue})`};\r\n// `;\r\n\r\nexport default (props) => {\r\n    const { history, image, removeImage } = props;\r\n    const { colors } = image.metadata.visionData;\r\n    const [primaryColor, secondaryColor] = colors\r\n        .sort((a, b) => b.score - a.score)\r\n        .reduce((acc, curr, index) => {\r\n            const {\r\n                color: { red, green, blue },\r\n            } = curr;\r\n            return index < 2 ? [...acc, `rgb(${red}, ${green}, ${blue})`] : acc;\r\n        }, []);\r\n\r\n    const [innerColor, outerColor] = [primaryColor, secondaryColor].sort((a, b) => getLuminance(b) - getLuminance(a));\r\n    const { user } = useContext(AppContext);\r\n    const gradient = `radial-gradient(circle, ${innerColor} 0%, ${outerColor} 100%)`;\r\n    const [fontColor] = ['#000', '#FFF'].sort((a, b) => getContrast(outerColor, b) - getContrast(outerColor, a));\r\n\r\n    return (\r\n        <>\r\n            <Wrapper gradient={gradient}>\r\n                <ImageWrapper>\r\n                    <DetailedImage image={{ ...image }} sizes=\"90vw\" />\r\n                </ImageWrapper>\r\n                <ButtonBar>\r\n                    <BackButton backgroundColor={outerColor} fontColor={fontColor} onClick={() => history.push('/')}>\r\n                        Tilbage\r\n                    </BackButton>\r\n                    {user && <DeleteButton onClick={() => removeImage(image)}>Slet billede</DeleteButton>}\r\n                </ButtonBar>\r\n            </Wrapper>\r\n            {/* <div>\r\n                {colors &&\r\n                    colors.map((data, index) => {\r\n                        return <ColorBlock key={index} color={data.color} />;\r\n                    })}\r\n            </div>\r\n            <ul>\r\n                {labels &&\r\n                    labels.map((data, index) => {\r\n                        return <li key={index}>{data.description}</li>;\r\n                    })}\r\n            </ul>\r\n            <ul>\r\n                {text &&\r\n                    text.map((data, index) => {\r\n                        return <li key={index}>{data.description}</li>;\r\n                    })}\r\n            </ul> */}\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/firestore';\nimport Gallery from './Gallery';\nimport ImageDetails from './ImageDetails';\n\nconst LoggedInBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background: #999;\n`;\n\nconst config = {\n    apiKey: 'AIzaSyDHmbdXOUwR8oEHREt-Qc1Pwe6CQYrcQx0',\n    authDomain: 'necgallery-9b4b2.firebaseapp.com',\n    databaseURL: 'https://necgallery-9b4b2.firebaseio.com',\n    projectId: 'necgallery-9b4b2',\n    storageBucket: 'necgallery-9b4b2.appspot.com',\n    messagingSenderId: '534201773677',\n};\n\nfirebase.initializeApp(config);\n\nconst db = firebase.firestore();\nconst galleryCollection = db.collection('gallery');\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nexport const AppContext = createContext();\n\nfunction upload(images, setUploadProgress) {\n    console.log(images);\n    return Promise.all(\n        images.map((image) => {\n            return new Promise((resolve, reject) => {\n                const id = uuidv4();\n\n                const imageRef = storageRef.child(`gallery/${id}/original.jpg`);\n                const uploadTask = imageRef.put(image);\n                uploadTask.on('state_changed', function uploadProgress(snapshot) {\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    setUploadProgress(progress);\n                });\n                uploadTask\n                    .then((snapshot) => {\n                        resolve({ ...snapshot, id });\n                    })\n                    .catch((err) => {\n                        reject(new Error(err.message_));\n                    });\n            });\n        })\n    ).catch((err) => {\n        alert(err);\n    });\n}\n\nfunction onDragoverHandler(event) {\n    event.preventDefault();\n}\n\nfunction deleteDocRef(id) {\n    return galleryCollection.doc(id).delete();\n}\n\nfunction deleteImageRef(path) {\n    return storageRef.child(path).delete();\n}\n\nfunction App() {\n    const [images, setImages] = useState([]);\n    const [user, setUser] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n\n    function onDropHandler(event) {\n        event.preventDefault();\n\n        console.log('onDrop');\n\n        const {\n            dataTransfer: { files = {} },\n        } = event;\n\n        const images = Object.values(files).reduce((acc, file) => {\n            return file.type.includes('image') ? [...acc, file] : acc;\n        }, []);\n\n        upload(images, setUploadProgress);\n    }\n\n    function removeImage(image) {\n        const sure = window.confirm('Er du sikker på du vil slette billedet?');\n\n        if (!sure) {\n            return;\n        }\n\n        const { id, downloadUrls } = image;\n        const keys = downloadUrls.map((obj) => {\n            const [key] = Object.keys(obj);\n            return key;\n        });\n        Promise.all([keys.map((key) => deleteImageRef(`gallery/${id}/${key}.jpg`)), deleteDocRef(id)])\n            .then(function () {\n                console.log('successfully deleted images');\n                // File deleted successfully\n            })\n            .catch(function (error) {\n                console.log(error);\n                // Uh-oh, an error occurred!\n            });\n    }\n\n    async function signOut() {\n        await firebase.auth().signOut();\n        setUser(false);\n    }\n\n    // Check login status\n    useEffect(() => {\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setUser(user);\n            }\n        });\n\n        return () => {\n            unregisterAuthObserver();\n        };\n    }, []);\n\n    useEffect(() => {\n        galleryCollection.onSnapshot(function (querySnapshot) {\n            const imagesFromDb = [];\n            querySnapshot.forEach(function (doc) {\n                const id = doc.id;\n                const data = doc.data();\n                imagesFromDb.push({ id, ...data });\n                console.log(data);\n            });\n            setImages(imagesFromDb);\n        });\n\n        document.addEventListener('drop', onDropHandler);\n        document.addEventListener('dragover', onDragoverHandler);\n    }, []);\n\n    return (\n        <AppContext.Provider value={{ user }}>\n            {user && (\n                <LoggedInBar>\n                    <span>Hej {user.displayName}</span>\n                    <button onClick={signOut}>Log ud</button>\n                </LoggedInBar>\n            )}\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={(props) => <Gallery {...props} images={images} uploadProgress={uploadProgress} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/image/:id\"\n                        render={(props) => {\n                            if (images.length) {\n                                const id = props.match.params.id;\n                                const image = images.find((image) => image.id === id);\n                                return image ? (\n                                    <ImageDetails {...props} image={image} removeImage={removeImage} />\n                                ) : (\n                                    <Redirect to=\"/\" />\n                                );\n                            }\n                        }}\n                    />\n                    <Route\n                        exact\n                        path=\"/login\"\n                        render={() =>\n                            user === false ? (\n                                <StyledFirebaseAuth\n                                    uiConfig={{\n                                        signInFlow: 'popup',\n                                        signInSuccessUrl: '/',\n                                        signInOptions: [firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n                                    }}\n                                    firebaseAuth={firebase.auth()}\n                                />\n                            ) : (\n                                <Redirect to=\"/\" />\n                            )\n                        }\n                    />\n                </Switch>\n            </Router>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}